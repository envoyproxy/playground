
Provides certificates for services.

Mimics the real ACME service, and allows you test certbot configurations
before deployment.

Listens on port `14000` for ACME requests, and provides a management
interface on port `15000`.

Although there are no pre-configured environment variables with this service
there are many that you may wish to configure.

See the [pebble repo](https://github.com/letsencrypt/pebble) for more information
about using this container image, and related environment variables.

The CA certificate used in this container can be
[downloaded here](https://github.com/letsencrypt/pebble/blob/master/test/certs/pebble.minica.pem)

There is a provided example Envoy configuration (`Service: ACME/letsencrypt`).

To make use of it you should:

- add a proxy with the `Service: ACME/letsencrypt` configuration and mapping the following ports
  - 10000 -> 10000
  - 10001 -> 10001
- create an `ACME letsencrypt (pebble)` service called `acme`
- connect the proxy and the `acme` service together on a network

With this setup you should be able to view the following endpoints:

- [https://localhost:10000](https://localhost:10000)
- [https://localhost:10001](https://localhost:10001)

Port `10000` is a `TCP` passthrough port that routes to the endpoint port of the `acme` service.

Port `10001` is a `TCP` passthrough port that routes to the admin port of the `acme` service.

All `HTTPS` certificates are "snake-oil" so you will need to use `-k` with `curl`
or accept untrusted certificates if viewing in a browser.
