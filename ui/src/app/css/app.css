.App {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
}

.App-header,
.App-footer {
    min-height: 5vh;
    vertical-align: middle;
    font-size: 1.2em;
}

.App-left,
.App-content,
.App-right {
    min-height: 90vh;
}

.App-content {
    background-color: #efefef;
}

.App-left,
.App-right {
    background-color: #eee;
}

.App-link {
  color: #61dafb;
}

.control-pane {
    height: 45vh;
    position: relative;
    left: 0;
    overflow: hidden;
    display: flex;
    flex-direction: column;
}

.scrollable {
    overflow-y: auto;
}

.canvas {
    background: white;
    box-shadow: inset 0 0 5px #aaa;
    margin-top: 3px;
}

.bg-dark {
    background-color: #ccc !important;
}

.bg-darkish {
    background-color: #ddd !important;
}

.bg-medium {
    background-color: #eee !important;
}

.border-dark {
    border-color: #999 !important;
}

.bg-code {
    background-color: #efefef;
}

.bg-cloud {
    background-color: rgb(252, 252, 251);
    background-opacity: 0.1;
}

.modal-xl {
    max-width: 90%;
}

.toast {
    position: absolute;
    bottom: 20px;
    right: 20px;
    z-index: 2001;
}

.playground-lazy-log {
    position: relative;
    top: 0;
    left: 0;
    height: calc(45vh - 3em);
    y-overflow: scroll;
}

.playground-event-logs {
    width: 100%;
}

.playground-fail-log {
    width: 100%;
    height: 50vh;
}

.playground-fail-log .log-error {
    color: yellow;
}

.playground-lazy-log .ReactVirtualized__Grid {
    background-color: #eee !important;
    color: #222 !important;
}

.playground-lazy-log .ReactVirtualized__Grid__innerScrollContainer > div:hover {
    background-color: #ccc !important;
}

.playground-lazy-log .ReactVirtualized__Grid__innerScrollContainer a {
    width: 3em !important;
    margin: 0 !important;
    margin-left: .7em !important;
}

.playground-lazy-log .ReactVirtualized__Grid__innerScrollContainer a:before {
    content: '>>>' !important;
}

.accordion-item.removing {
    opacity: .5;
}

.nav-item  a:active,
.nav-item  a:focus {
 outline: none !important;
 ie-dummy: expression(this.hideFocus=true) !important;
}
